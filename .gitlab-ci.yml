stages:
  - build
  - deploy
  - cleanup

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CLOUDFLARE_PROJECT_NAME: "pages-for-article"
  HUGO_PRODUCTION_BASE_URL: "https://pages-for-article.pages.dev"

workflow:
  rules:
    # Always run for tag
    - if: "$CI_COMMIT_TAG"
    # Run pipeline for merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    # Do not run branch pipeline if there is merge request and branch
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    # Always run every commit on default branch that does not have a tag
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG !~ /^./'
      # Always run on schedule
    - if: $CI_PIPELINE_SOURCE == "schedule"

.build:
  image: alpine:latest
  stage: build
  before_script:
    - apk update
    - apk add --no-cache hugo
  artifacts:
    paths:
        - "public"
    expire_in: 2 days
    when: always
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: always

build:preview:
  extends: 
    - .build
  script:
    - hugo --buildDrafts 

build:production:
  extends: 
    - .build
  script:
    - hugo --baseURL "${HUGO_PRODUCTION_BASE_URL}"

.deploy:
  image: node:18-alpine
  stage: deploy
  variables:
    CLOUDFLARE_BRANCH: "$CI_COMMIT_BRANCH"
    CLOUDFLARE_COMMIT_HASH: "$CI_COMMIT_SHA"
    CLOUDFLARE_COMMIT_MESSAGE: "$CI_COMMIT_MESSAGE"
  script: |
    npx wrangler pages deploy public \
      --project-name "$CLOUDFLARE_PROJECT_NAME" \
      --branch "$CLOUDFLARE_BRANCH" \
      --commit-hash "$CLOUDFLARE_COMMIT_HASH" \
      --commit-message "$CLOUDFLARE_COMMIT_MESSAGE" \
      --commit-dirty false

deploy:preview:
  extends: 
    - .deploy
  needs:
    - build:preview
  environment: staging
  variables:
    CLOUDFLARE_BRANCH: "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' 
      when: manual
      variables:
        CLOUDFLARE_BRANCH: "$CI_COMMIT_BRANCH-preview"
    - if: '$CI_COMMIT_TAG' 
      when: never
    - when: manual
  allow_failure: true

deploy:production:
  extends: 
    - .deploy
  needs:
    - build:production
  environment: production
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
    - if: '$CI_COMMIT_TAG' 
      when: always
      variables:
        # Cloudflare pages do not treat tags as "production" deployments, to overcome this
        # pretend that branch is default, i.e. main, add tag name into commit message
        CLOUDFLARE_BRANCH: "$CI_DEFAULT_BRANCH"
        CLOUDFLARE_COMMIT_MESSAGE: "$CI_COMMIT_TAG - $CI_COMMIT_TAG_MESSAGE"
    - when: never

.cleanup:
  image: python:3.11-alpine
  stage: cleanup
  variables:
    CLEANUP_KEEP_DAYS: 7
  before_script:
    - pip install requests python-dateutil
  script:
    - python scripts/cleanup-deployments.py --environment ${CLEANUP_ENVIRONMENT} --days ${CLEANUP_KEEP_DAYS} --count ${CLEANUP_KEEP_COUNT}
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

cleanup:preview:
  extends: [.cleanup]
  variables:
    CLEANUP_ENVIRONMENT: "preview"
    CLEANUP_KEEP_COUNT: 0

cleanup:production:
  extends: [.cleanup]
  variables:
    CLEANUP_ENVIRONMENT: "production"
    CLEANUP_KEEP_COUNT: 2
